apiVersion: batch/v1
kind: CronJob
metadata:
  name: pi # cronjob-jobx
spec:
  schedule: "*/1 * * * *"  
  concurrencyPolicy: "Replace" 
  startingDeadlineSeconds: 200 
  suspend: true            
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1 
  jobTemplate:             
    spec:
      template:
        metadata:
          labels:          
            parent: "cronjobpi"
        spec:
          containers:
            - resources:
                limits:
                  cpu: 300m
                  memory: 600M
                requests:
                  cpu: 100m
                  memory: 200M
              # terminationMessagePath: /dev/termination-log
              name: jobx-job-container
              command:
                - /bin/sh
                - '-c'
              args:
                - |
                  python -u hello.py
                # python main.py && sleep 20s && touch /tmp/pod/terminated
                # use ttlSecondsAfterFinished instead of sleep
                # touch /tmp/pod/terminated is for sidecar
              env:
                - name: ENTRY_POINT
                  value: python app.py
                - name: SLEEP_S
                  value: "2"
              imagePullPolicy: Always
              terminationMessagePolicy: File
              image: 'cr/project(or ns)/repo:tag'
          restartPolicy: Never
          # - name: pi
          #   image: perl
          #   command: ["perl",  "-Mbignum=bpi", "-wle", "print bpi(2000)"]
          # restartPolicy: OnFailure
