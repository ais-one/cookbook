TEST_DOTENV_JSON='{
  "AA": {
    "BB": 2
  }
}'

STACK_TRACE_LIMIT=10

API_PORT=3000
WS_PORT=3001
# WS_PORT=0 # UAT
WS_KEEEPALIVE_MS=30000

# AUTH
SALT_ROUNDS=12

# HTTPONLY COOKIES
# https://web.dev/samesite-cookies-explained/
# true = use HttpOnly cookie, false - do not use HttpOnly cookie (alternatively use localStorage / sessionStorage - be careful, has security implications)
COOKIE_HTTPONLY=1 # (also set on FE... credentials if cross origin, true means ) - DO TAKE NOTE OF CORS
# must be true if COOKIE_SAMESITE=None 
COOKIE_SECURE=
# Strict - CORS_OPTIONS === null
# Lax, None (None must use Secure also) - CORS_OPTIONS !== null 
COOKIE_SAMESITE=Lax
COOKIE_MAXAGE=
COOKIE_SECRET= # for use by cookie-parser
COOKIE_DOMAIN=

# UAT
# JWT_EXPIRY=7200
# JWT_REFRESH_EXPIRY=14400
# COOKIE_SECURE=
# COOKIE_SAMESITE=None


AUTH_REFRESH_URL=/api/auth/refresh
AUTH_USER_STORE=knex # mongo, knex
AUTH_USER_STORE_NAME=users
AUTH_USER_FIELD_ID_FOR_JWT=id # mongo = _id, knex = id // can be NTID from SAML
AUTH_USER_FIELDS_JWT_PAYLOAD=email,groups # comma seperated, can be AD Groups from SAML, email, etc.
AUTH_USER_FIELD_LOGIN=email
AUTH_USER_FIELD_PASSWORD=password 
AUTH_USER_FIELD_GAKEY=gaKey

# UAT
# JWT_REFRESH_STORE=mongo
# AUTH_USER_STORE=mongo
# AUTH_USER_STORE_NAME=users
# AUTH_USER_FIELD_ID_FOR_JWT=_id
# AUTH_USER_FIELDS_JWT_PAYLOAD=email,groups
# AUTH_USER_FIELD_LOGIN=email
# AUTH_USER_FIELD_PASSWORD=password 
# AUTH_USER_FIELD_GAKEY=gaKey


# AUTH JWT - secret key
JWT_ALG=HS256 # 'RS256' (use SSL certs), 'HS256' (use secret string)
JWT_SECRET=123456789 # HS256
JWT_REFRESH_SECRET=123456789 # HS256
JWT_EXPIRY=1800 # 5 (test refresh) // 1800 // '150d', '15d', '15m', '15s', use small expiry to test refresh mechanism, numeric is seconds
JWT_REFRESH_EXPIRY=3600 # 10 (test refresh) // 3600 // do not allow refresh handling after defined seconds
JWT_REFRESH_STORE=keyv # mongo, knex, redis, keyv (default)
JWT_REFRESH_STORE_NAME=user_session # collection or table name

# AUTH - OTP
USE_OTP=TEST # GA, SMS, '' (also on FE) set to TEST for testing using 111111 as PIN
OTP_EXPIRY=30 # in seconds - UNUSED

# URL to redirect if error
AUTH_ERROR_URL=

# SAML - SECRET
# https://github.com/node-saml/passport-saml#config-parameter-details
SAML_OPTIONS=
SAML_CERTIFICATE=
SAML_PRIVATE_KEY=
SAML_JWT_MAP='{ "id": "nameID", "groups": "Role" }'

# OIDC - SECRET
# NOTE: need to setup keycloak for OIDC see readme in docker-devenv folder
# OIDC_OPTIONS=
OIDC_OPTIONS='{
  "URL": "http://127.0.0.1:8081/auth/realms/test/protocol/openid-connect",
  "CLIENT_ID": "test-oidc-client",
  "CLIENT_SECRET": "",
  "CALLBACK": "http://127.0.0.1:8080/callback"
}'

# OAuth - SECRET (we use github for example)
OAUTH_OPTIONS=

# MONGO DB INFO
# - SECRET, SHOULD STORE IN SEPERATE AES ENCRYPTED FILE IN PROD
# url=mongodb://{USER}:{PASSWORD}@{HOST}:{PORT}/{DBNAME}?authMechanism=SCRAM-SHA-1&authSource={AUTH_DBNAME}
# url=mongodb://127.0.0.1:27017/mm?replicaSet=rs0
# https://mongodb.github.io/node-mongodb-native/3.6/reference/connecting/connection-settings/
# https://github.com/Automattic/mongoose/issues/8180
# small value timedout on cloudrun
MONGO_OPTIONS='{
  "url": "mongodb://127.0.0.1:27017/testdb-development",
  "opts": {
    "useUnifiedTopology": true,
    "useNewUrlParser": true,
    "connectTimeoutMS": 30000,
    "serverSelectionTimeoutMS": 30000
  }
}'

# knexfile configuration - SECRET
# sqilite conection.filename - relative to directory that package.json was run
# KNEXFILE=
KNEXFILE='{
    "client": "sqlite3",
    "connection": { "filename": "dev.sqlite3" },
    "useNullAsDefault": true
}'

# GCP Stuff - SECRET
# GCP SERVICE KEY is { }
GCP_SERVICE_KEY=
GCP_DEFAULT_BUCKET=

# helmetjs options
HELMET_OPTIONS= '{
  "hideServer": true,
  "csp": null,
  "nosniff": true,
  "xssfilter": true,
  "csp": {
    "directives": {
      "defaultSrc": ["\'self\'"],
      "scriptSrc": ["\'self\'","code.jquery.com","maxcdn.bootstrapcdn.com"],
      "styleSrc": ["\'self\'","maxcdn.bootstrapcdn.com"],
      "fontSrc": ["\'self\'","maxcdn.bootstrapcdn.com"]
    }
  }
}'


# CORS - SAME ORIGIN - PROXIED
#   CORS_OPTIONS: null
#   PROXY_WWW_ORIGIN: 'example.com:8080'
#   WEB_STATIC: ''

# CORS - SAME ORIGIN - SERVED BY EXPRESS STATIC
#   CORS_OPTIONS: null
#   PROXY_WWW_ORIGIN: ''
#   WEB_STATIC: 'public'

# CORS - CROSS ORIGIN
#   CORS_OPTIONS {
#     ...
#     withCredentials: true,
#     origin: '127.0.0.1:8080'
#   }
#   PROXY_WWW_ORIGIN: ''
#   WEB_STATIC: ''


# port 8081 is from SAML
# nip.io & localhost for fido2 testing
# DEV
CORS_ORIGINS="http://127.0.0.1:8080,http://127.0.0.1:3000,http://127.0.0.1:8081,https://127.0.0.1:8080,https://127.0.0.1:3000,https://127.0.0.1:8081,https://192-168-18-8.nip.io:3000,http://localhost:3000"
# UAT
# CORS_ORIGINS="https://uat.mybot.live,http://uat.mybot.live"

# if withCredentials === false at Frontend
# CORS_OPTIONS=
#
# set withCredentials === true at Frontend
  # exposedHeaders: ['refresh-token'], // allow this to be sent back in response
  # maxAge
  # allowedHeaders
  # credentials
  # default cors settings
  # credentials: true // Access-Control-Allow-Credentials value to true
CORS_OPTIONS='{
  "methods": "GET,HEAD,PUT,PATCH,POST,DELETE",
  "preflightContinue": false,
  "optionsSuccessStatus": 204,
  "credentials": true,
  "origin": "http://127.0.0.1:8080" 
}'


# 'http://127.0.0.1:8080', // used by proxy middleware
PROXY_WWW_ORIGIN=

# serve static content - folder is relative to calling package.json - https://expressjs.com/en/4x/api.html#express.static
# serve website from folder, blank if do not serve from express. Must be '' if there is PROXY_WWW_ORIGIN
# options does not seem to work
# { folder: 'openapi', url: '/ftp2', options: {'icons': true}, list: true },
WEB_STATIC='[
  { "folder": "apps/app-template/openapi", "url": "/openapi" },
  { "folder": "../../@es-labs/esm", "url": "/esm" },
  { "folder": "../../js-web/vue-nobundler", "url": "/native", "options": { "extensions": ["html"], "index": false } },
  { "folder": "../../js-web/vue-vite/dist", "url": "/vite", "options": { "extensions": ["html"], "index": false } },
  { "folder": "public/demo-express", "url": "/" }
]'
# last as path is /
#
# API only..., not serve any static page
# WEB_STATIC=

## TBD
# for file uploads
UPLOAD_STATIC='[{
  "folder": "uploads",
  "url": "/uploads",
  "options": {
    "fileFilter": {
      "allowedMimeTypes": "text,image",
      "allowedExtensions": ""
    },
    "limits": {
      "files": 2,
      "fileSize": 10000000
    }
  },
  "list": true,
  "listOptions": {
    "icons": true
  }
}]'

## TBD
# size in bytes
# fileFilter property...
UPLOAD_MEMORY='[{
  "limits": {
    "files" : 1,
    "fileSize": 500000 
  }
}]'

# Role-based access control - not needed, implemented by middleware - e.g. isAdmin after user authentication

# master list of config keys - defaults will be undefined unless specified

# Express - logging - refer to common-express/preRoute.js
ENABLE_LOGGER=

# MQ - agendamq - requires mongodb
JOB_MONGO_URL=mongodb://127.0.0.1:27017/testdb-development # can be same as MONGO_OPTIONS.url
JOB_COLLECTION=agendaJobs # collection name
JOB_TYPES=email # 'email,nexmo,telegram' //  agenda message queue job types, comma seperated, each job is a file name in the jobs folder

# MQ - bullmq - requires redis - CURRENTLY NOT IN USE - USE AGENDAJS INSTEAD
JOB_BULL=

# Communications - Nexmo - @es-labs/node/comms/nexmo.js
NEXMO_SENDER=
NEXMO_KEY=
NEXMO_SECRET=

# Communications - Telegram - @es-labs/node/comms/telegram.js
TELEGRAM_CHANNEL_ID=
TELEGRAM_API_KEY=

# Communications - Sendgrid - @es-labs/node/comms/email.js
SENDGRID_KEY=
SENDGRID_SENDER=

# Communications - Firebase Messaging - @es-labs/node/comms/fcm.js
FCM_SERVER_KEY=

# Communications - Firebase Messaging (@es-labs/node/comms/webpush.js)
WEBPUSH_VAPID_URL=http://127.0.0.1:3000

# Caching Redis - ioredis object or null
# if using sentinels
# opts.sentinels: [{ "host": "localhost", "port": 26379 }, { "host": "localhost", "port": 26380 }]
# opts.name: "mymaster",
REDIS_CONFIG=
DISABLED_REDIS_CONFIG='{
  "opts": {
    "port": 6379,
    "host": "127.0.0.1",
    "family": 4,
    "password": '',
    "db": 0,
    "maxRetriesPerRequest": 20,
    "autoResubscribe": true, // default
    "autoResendUnfulfilledCommands": true,
  },
  "retry": {
    "step": 50, "max": 2000 
  },
  "reconnect": {
    "targetError": "READONLY"
  }
}'



# Caching Keyv - keyv object or null
KEYV_CACHE=

# bodyparser
BODYPARSER_JSON={ "limit": "2mb" }
BODYPARSER_URLENCODED={ "extended": true, "limit": "2mb" }


# OPENAPI document
OPENAPI_PATH=./apps/app-template/openapi/example.output.yaml
OPENAPI_VALIDATOR=
# {
#   "apiSpec": "./apps/app-template/openapi/example.output.yaml",
#   "validateRequests": true, // (default)
#   "validateResponses": true, // false by default
# }

# GraphQL - WAIT FOR THIS TO BE FIXED - https://github.com/graphql/express-graphql/pull/793
# npm i graphql-subscriptions, graphql, express-graphql, graphql-ws
# "express-graphql": "^0.12.0",
# "graphql": "^16.3.0",
# "graphql-subscriptions": "^2.0.0",
# "graphql-ws": "^5.6.2",
# GRAPHQL_SCHEMA_PATH=../apps/app-template/graphql-schema
GRAPHQL_SCHEMA_PATH=
GRAPHQL_URL=/graphql
GRAPHQL_SUB_URL=/subscriptions

# sentry.io
SENTRY_DSN=https://59719c6eb4ec44c988b86a0e3157347b@o406131.ingest.sentry.io/5868141
SENTRY_SAMPLE_RATE=1.0
SENTRY_REQOPTS=


JWT_PRIVATE_KEY="-----BEGIN RSA PRIVATE KEY-----
MIICXgIBAAKBgQDQIwMrGPHdUNJJaZaPCtU+mD+/4C3WVuYpHUdUKWc1BBX4/FPo
DOivAlcwBEvYARnsuVG5dThV39QQi2IMm+RYMzl50eNK+CfeOIke3GCiFKzqClIV
g7buT1qWRzWvFL9ujgL6lswHunz0bcjiI+L28tDmsJkUHdiD7GzAnzOSTwIDAQAB
AoGAbvO7JKZPiKMk9m2LDQXBV3Thxu9CgBgi6ZfqBjtsAR8Ed45LTFBVWbXttHMV
2zf7Ee5YWnzaYyzGZ2tmAUK5HjVQ82eWqaJnEVRZzSABMIIwwxODaXOjXsngLKMV
61dvLHGx9PoAT9O+Jmn+lyYIV9pSlvwjtbue1Czg8f7HTQECQQDpu3AIhQGN1O4v
oXy8ZSi7Tg1CnCRtSF5LRtAUcsxYYGGg8TESxvpZs+6Qjcoo8Eg2Zq0eajBHvPk0
pz3WLnbRAkEA4/dSHx3LUA5wvhSz0L0J04dFzGlYgLxk5ATWLZV3L09AvbcNBMW6
SB7UNfJ0Cm2CkxGjZGFKbclbJg9D0+n/HwJBAIuBAGFVYZQR3wg2zohzqFgDQg7b
uzIu23j6jv9ldWnaPOseije2433e0ykcN+kvYSp3JiTdJGvs8qDmoRXRLcECQQC+
hjR/RxJmHTuC0aCbI3Lz9AmU1rKeHVYg8B3kyRdsVcthA30A8RRINGPdln3/PRk1
OzeYrGtdKD1iqL1ifh23AkEAo8xptlbolXUBXnVOKqHYLMLLPDQleaAxO8h4kLP6
PE3tZFcESBg5mHRXYZcXSIeAvZ/rILqnCSYHeq5R2ukI+A==
-----END RSA PRIVATE KEY-----"

JWT_CERTIFICATE="-----BEGIN CERTIFICATE-----
MIIClTCCAf6gAwIBAgIJH2o2ydae72jFMA0GCSqGSIb3DQEBCwUAMGkxFDASBgNV
BAMTC2V4YW1wbGUub3JnMQswCQYDVQQGEwJVUzERMA8GA1UECBMIVmlyZ2luaWEx
EzARBgNVBAcTCkJsYWNrc2J1cmcxDTALBgNVBAoTBFRlc3QxDTALBgNVBAsTBFRl
c3QwHhcNMjIwMjEwMDk1MDA1WhcNMzExMjIwMDk1MDA1WjBpMRQwEgYDVQQDEwtl
eGFtcGxlLm9yZzELMAkGA1UEBhMCVVMxETAPBgNVBAgTCFZpcmdpbmlhMRMwEQYD
VQQHEwpCbGFja3NidXJnMQ0wCwYDVQQKEwRUZXN0MQ0wCwYDVQQLEwRUZXN0MIGf
MA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDQIwMrGPHdUNJJaZaPCtU+mD+/4C3W
VuYpHUdUKWc1BBX4/FPoDOivAlcwBEvYARnsuVG5dThV39QQi2IMm+RYMzl50eNK
+CfeOIke3GCiFKzqClIVg7buT1qWRzWvFL9ujgL6lswHunz0bcjiI+L28tDmsJkU
HdiD7GzAnzOSTwIDAQABo0UwQzAMBgNVHRMEBTADAQH/MAsGA1UdDwQEAwIC9DAm
BgNVHREEHzAdhhtodHRwOi8vZXhhbXBsZS5vcmcvd2ViaWQjbWUwDQYJKoZIhvcN
AQELBQADgYEAiKtmYDveozTB0K7ZjPbZV1qsYYA8o0kq6Jx1QmAJTK0fNJLvP1kj
LYFNMWjoFok/LaslyWHQ5ubFkmQ+DvdRFpnqw9CY67nHGO3M9tDWIWpulWmPVRqR
poPEhvIQlLQCosNIu4q/Ggq4LTGF0VVrWjU+s4Nh3deYVE+ovefRT84=
-----END CERTIFICATE-----"

JWT_REFRESH_PRIVATE_KEY=

JWT_REFRESH_CERTIFICATE=

DISABLE__HTTPS_PRIVATE_KEY="-----BEGIN RSA PRIVATE KEY-----
MIICXgIBAAKBgQDQIwMrGPHdUNJJaZaPCtU+mD+/4C3WVuYpHUdUKWc1BBX4/FPo
DOivAlcwBEvYARnsuVG5dThV39QQi2IMm+RYMzl50eNK+CfeOIke3GCiFKzqClIV
g7buT1qWRzWvFL9ujgL6lswHunz0bcjiI+L28tDmsJkUHdiD7GzAnzOSTwIDAQAB
AoGAbvO7JKZPiKMk9m2LDQXBV3Thxu9CgBgi6ZfqBjtsAR8Ed45LTFBVWbXttHMV
2zf7Ee5YWnzaYyzGZ2tmAUK5HjVQ82eWqaJnEVRZzSABMIIwwxODaXOjXsngLKMV
61dvLHGx9PoAT9O+Jmn+lyYIV9pSlvwjtbue1Czg8f7HTQECQQDpu3AIhQGN1O4v
oXy8ZSi7Tg1CnCRtSF5LRtAUcsxYYGGg8TESxvpZs+6Qjcoo8Eg2Zq0eajBHvPk0
pz3WLnbRAkEA4/dSHx3LUA5wvhSz0L0J04dFzGlYgLxk5ATWLZV3L09AvbcNBMW6
SB7UNfJ0Cm2CkxGjZGFKbclbJg9D0+n/HwJBAIuBAGFVYZQR3wg2zohzqFgDQg7b
uzIu23j6jv9ldWnaPOseije2433e0ykcN+kvYSp3JiTdJGvs8qDmoRXRLcECQQC+
hjR/RxJmHTuC0aCbI3Lz9AmU1rKeHVYg8B3kyRdsVcthA30A8RRINGPdln3/PRk1
OzeYrGtdKD1iqL1ifh23AkEAo8xptlbolXUBXnVOKqHYLMLLPDQleaAxO8h4kLP6
PE3tZFcESBg5mHRXYZcXSIeAvZ/rILqnCSYHeq5R2ukI+A==
-----END RSA PRIVATE KEY-----"

DISABLE__HTTPS_CERTIFICATE="-----BEGIN CERTIFICATE-----
MIIClTCCAf6gAwIBAgIJH2o2ydae72jFMA0GCSqGSIb3DQEBCwUAMGkxFDASBgNV
BAMTC2V4YW1wbGUub3JnMQswCQYDVQQGEwJVUzERMA8GA1UECBMIVmlyZ2luaWEx
EzARBgNVBAcTCkJsYWNrc2J1cmcxDTALBgNVBAoTBFRlc3QxDTALBgNVBAsTBFRl
c3QwHhcNMjIwMjEwMDk1MDA1WhcNMzExMjIwMDk1MDA1WjBpMRQwEgYDVQQDEwtl
eGFtcGxlLm9yZzELMAkGA1UEBhMCVVMxETAPBgNVBAgTCFZpcmdpbmlhMRMwEQYD
VQQHEwpCbGFja3NidXJnMQ0wCwYDVQQKEwRUZXN0MQ0wCwYDVQQLEwRUZXN0MIGf
MA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQDQIwMrGPHdUNJJaZaPCtU+mD+/4C3W
VuYpHUdUKWc1BBX4/FPoDOivAlcwBEvYARnsuVG5dThV39QQi2IMm+RYMzl50eNK
+CfeOIke3GCiFKzqClIVg7buT1qWRzWvFL9ujgL6lswHunz0bcjiI+L28tDmsJkU
HdiD7GzAnzOSTwIDAQABo0UwQzAMBgNVHRMEBTADAQH/MAsGA1UdDwQEAwIC9DAm
BgNVHREEHzAdhhtodHRwOi8vZXhhbXBsZS5vcmcvd2ViaWQjbWUwDQYJKoZIhvcN
AQELBQADgYEAiKtmYDveozTB0K7ZjPbZV1qsYYA8o0kq6Jx1QmAJTK0fNJLvP1kj
LYFNMWjoFok/LaslyWHQ5ubFkmQ+DvdRFpnqw9CY67nHGO3M9tDWIWpulWmPVRqR
poPEhvIQlLQCosNIu4q/Ggq4LTGF0VVrWjU+s4Nh3deYVE+ovefRT84=
-----END CERTIFICATE-----"

