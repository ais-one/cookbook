type Query {
  hello(message: String): String

  getCategory(id: Int!): Category
  getCategories(page: Int!, limit: Int!): Categories

  uploads: [File] # file upload
}

type Mutation {
  setHello(body: HelloObj!): String

  patchCategory(id: Int!, body: InputCategory!): Category
  postCategory(body: InputCategory!): Category

  singleUpload(file: Upload!): File! # file upload
}

type Subscription {
  helloUpdated: String
}
 
type File { # File Upload - Upload scalar type is from Apollo - better to use rest for this?
  filename: String!
  mimetype: String!
  encoding: String!
}

input HelloObj {
  message: String!
}
input InputCategory {
  name: String!
}
type Category {
  id: ID!
  name: String!
}
type Categories {
  results: [Category]!
  total: Int!
}
